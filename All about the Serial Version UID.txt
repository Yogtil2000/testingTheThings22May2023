Syntax for the Serial Version UID :
private static final long serialVersionUID = 1L;

 if you didn't mentioned it then it can be bydefault mentioned by the JVM for you .
  SO JVM associates a version (long) number with each serializable class. We use the serialVersionUID attribute to remember 
  versions of a Serializable class to verify that a loaded class and the serialized object are compatible.

            Most IDEs can generate this number automatically , and its based on the "class name","attributes", and "associated access 
modifiers". 

      any changes result in a different number , and can cause an "InvalidClassException"

If a serializable class doesn't declare a serialVersionUID, the JVM will generate one automatically at run time.
     However, it's highly recommended that each class declares its serialVersionUID , as the generated one is compiler dependent
and thus may result in unexpected "InvalidClassException".
means as the JVM is platform dependent or we say the compiler dependent so due to this what happens is that serialVersionUID 
which is generated by the one JVM may not be feasible to the another JVM present on the other system 
. so its a good practice to having generating the serialVersionUID by your own.

